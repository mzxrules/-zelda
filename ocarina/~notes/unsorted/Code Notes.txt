$00A87000 - $00B8AD30	code

B65C64 - On entrance cutscene table
B6FBF0 - Entrance Table
B71440 - Scene Table

800EEE70/4 camera behavior table? (8 bytes per record)

800E82F8 actor category table settings?
800EC020 table ref by 80034424, up to 0x1F s32 elements
800EF080 Camera Functions Table
800EF1A0 //?
800F7714
800F7768 //Held Item settings?, 0x10 items, 0x5 bytes
800F77B8 //Link Dlist Table. 0x258 bytes. Records of 0x8 bytes, such that the first is an Adult Link ref, while the second is child Link ref
800F7A10 //Held Item display list pointer table? 0x17 records, 4 bytes ea
800F8F34 inventory slot table (0x38 bytes)
800FBD18 //func ptr table for scene pre-draw function, 0x35 records
//struct start for saving
800FC0B0 //OSPiHandle for save data transfer
800FC124 //OSIoMesg for save data transfer
800FC13C //osMesgQueue for save data transfer

801029FC //Scarecrow's Song (short) (audio thread)
80102B54 u8 //determines if func C31A0 uses 80102EE0 (== 1) or 80102EE8 (!= 1) buffer ptr
80102B58 u8 //note index into either buffer 80102EE0 or 80102EE8
80102B5C s32 //previous note play frame?, 80121F1C - this = note duration
80102B60 //possibly 0x08 bytes? next note to write into 80102EE0 or 80102EE8 buffer
80102B80 //Scarecrow's Song (long) (audio thread)
80102EE0 //Scarecrow's Song (long) ptr
80102EE4 //Scarecrow's Song (short) pointer (801029FC)
80102EE8 //Scarecrow's Song? buffer ptr

801054A0 s16 sine table
80105FB4 //En_Item00 draw jump table. Actor var sets draw function
80106A70 float, equals 1/0x7FFF (normals)
80106A80 float, equals 1/32767
80106A84 float, equals 1/32767
80106AC0 float, 1+E38 (Collision Code Constant)
80106AC4 float, 1.1f (Actor Collision Mesh constant?)
80107A60 float, equals 1/32767
80107A64 float, equals 1/32767
80108924 float, pi
80108928 float,  90 degrees in radians
80108E7C float, 0.008f
8010A4F0 float,  90 degrees in radians
8010A4F4 float, -90 degrees in radians
8010A4F8 float, -90 degrees in radians
8010A4FC float,  90 degrees in radians
8010A500 float, pi
8010A504 float, pi
8010A508 float,  90 degrees in radians
8010A710 double, equals pi/180
8010A718 double, equals 1/pi
8010A880 double, equals pi
8010A888 double, equals 3.178650954705639e-8 (extended pi precision)

80105420 = Something debugging related (Generates output text for dynamic link function)
800F8BE0 ptr[3] //function pointer table for room mesh type

AF828 //unicode? table for text?





800FC0B0 is some struct related to saving.
	0x00 ptr is pointer to self
	0x04 int[2] appears to be a "magic" sequence
	0x0C ptr, is a pointer to ?, address space A8xx xxxx. Likely SRAM
	0x14 is start of 0x60 byte buffer, likely used for saving
800FC130 ptr appears to be some


Address A800 0000 likely to write to SRAM 


Crash Debugger, write to 003DD02C

//outside code
80118F70
80118F80 //xyz collision stuff?

8011BF00 s32 ptr to ovl_map_mark_data's dungeon array

8011CF10 //?
+ 0x04 = u8[0x40] array of ?
+ 0x44 = u8[0x40] array of ?
+ 0x84 = u8[0x40] array of ?

80121F1C s32 //current ocarina note frame?


//File Select Notes:

8029F9F0 - The game's save data is copied here

Ocarina Song note format:

ACTIVATION_TO_PLAYBACK_NOTE = {
    0: 0x02, # A
    1: 0x05, # Down
    2: 0x09, # Right
    3: 0x0B, # Left
    4: 0x0E, # Up
    0xFF: 0xFF, # Rest
	
0x00 u8   //playback note
0x02 u16? //duration 